<Application x:Class="Example.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Example"
             xmlns:xoxy="http://Epxoxy.org/controls"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:converters="clr-namespace:Epxoxy.Converters;assembly=Epxoxy"
             StartupUri="Views/MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Epxoxy;component/Styles/ComboBoxStyles.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Epxoxy;component/Styles/PlaceHolderStyles.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Epxoxy;component/Themes/Generic.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Epxoxy;component/Styles/ToolTipStyle.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Epxoxy;component/Styles/ButtonStyles.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Epxoxy;component/Styles/SliderStyles.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Epxoxy;component/Styles/DateControlStyles.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Epxoxy;component/Styles/ScrollViewerStyles.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Epxoxy;component/Styles/WindowsTenStyles.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Epxoxy;component/Styles/MaterialLiteStyles.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Epxoxy;component/Styles/ListViewStyles.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Epxoxy;component/Styles/CheckBoxStyles.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Epxoxy;component/Styles/ExpanderStyles.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Epxoxy;component/Styles/DataGridStyles.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Epxoxy;component/Styles/TabControlStyles.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Epxoxy;component/Styles/ProgressBarStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="TextTrimming" Value="CharacterEllipsis"></Setter>
            </Style>
            <TextBlock x:Key="NotoSansFontStyle" FontFamily="./#Noto Sans" />

            <FontFamily x:Key="NotoSansFont">/Example;component/Resources/Fonts/NotoSans/#Noto Sans</FontFamily>
            <!--<FontFamily x:Key="IconFont">pack://application:,,,/Resources/Fonts/#iconfont" />-->
            <!--pack://application:,,,/Example;component/.#myfont-->

            <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource ToolTipDarkStyle}" />

            <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource BarCompactableScrollViewerStyle}" />

            <converters:DoubleToInteger x:Key="doubletoint"/>
            <converters:BackgroundToForegroundConverter x:Key="backtofore" ForegroundOnDark="Black" ForegroundOnLight="White" />

            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
            <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
            <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
            <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
            <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
            <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
            <Color x:Key="Button.MouseOver.Foreground" A="255" R="0" G="0" B="0"/>
            <Color x:Key="Button.Pressed.Foreground" A="200" R="0" G="0" B="0"/>
            <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
            <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
            <Style x:Key="ForeTextToggleButtonStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                <Setter Property="Foreground" Value="DimGray"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="{StaticResource Button.MouseOver.Foreground}"></ColorAnimation>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed" >
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="{StaticResource Button.Pressed.Foreground}"></ColorAnimation>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CheckSates">
                                        <VisualState x:Name="Checked" />
                                        <VisualState x:Name="Unchecked" />
                                        <VisualState x:Name="Indeterminate" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Cursor" Value="Hand" />
                                    <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>-->
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>-->
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>-->
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ForeTextButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                <Setter Property="Foreground" Value="DimGray"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.3" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="{StaticResource Button.MouseOver.Foreground}"></ColorAnimation>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed" >
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="{StaticResource Button.Pressed.Foreground}"></ColorAnimation>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                </ContentPresenter>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Cursor" Value="Hand" />
                                    <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>-->
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>-->
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>-->
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <DataTemplate x:Key="IconItemTemplate">
                <Grid TextElement.FontSize="16" Height="48" ToolTip="{Binding Label}" ToolTipService.Placement="Right"
                      ToolTipService.VerticalOffset="10" ToolTipService.HorizontalOffset="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="{Binding Icon}" FontSize="{Binding Size}"
                           TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="/Example;component/Resources/Fonts/#iconfont"/>
                    <TextBlock Grid.Column="1" Text="{Binding Label}" Focusable="False" 
                           HorizontalAlignment="Left" VerticalAlignment="Center"/>
                </Grid>
            </DataTemplate>
            
            <!--#region  UnHand Styles -->

            <!--#region ListBox-->

            <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
            <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
            <SolidColorBrush x:Key="Item.SelectedPipe.Fill" Color="#4C4A48" />
            <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border x:Name="Bd" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <Grid>
                                    <ContentPresenter Margin="0,0,0,0" HorizontalAlignment="Left" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Rectangle x:Name="SelectedPipe" Fill="{StaticResource Item.SelectedPipe.Fill}" Opacity="0" Width="4"  Height="24" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="Bd" Value="LightGray" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Opacity" TargetName="SelectedPipe" Value="1" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="PipeListBoxStyle" TargetType="{x:Type ListBox}">
                <Setter Property="SelectionMode" Value="Single" />
                <Setter Property="Background" Value="#fff8f8f9" />
                <Setter Property="ItemContainerStyle" Value="{StaticResource PipeListBoxItemStyle}" />
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalOnly"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <Border x:Name="Bd" BorderThickness="0" Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="true">
                                <ScrollViewer Focusable="false" CanContentScroll="False" Padding="0"
                                          HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <!--ListBox.Disabled.Background-->
                                    <Setter Property="Background" TargetName="Bd" Value="White"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGrouping" Value="true"/>
                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Vertical" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--#endregion-->

            <!--#region HeaderContentControl-->

            <ControlTemplate x:Key="TitleHeaderControlTemplate" TargetType="{x:Type HeaderedContentControl}">
                <Grid Background="{TemplateBinding Background}" KeyboardNavigation.IsTabStop="False">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <TextBlock Text="{TemplateBinding Header}" Margin="{TemplateBinding Padding}" FontSize="16" Foreground="DimGray" Padding="0,7" KeyboardNavigation.IsTabStop="False"/>
                    <Border BorderBrush="{TemplateBinding BorderBrush}" Margin="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}"/>
                    <ContentPresenter Grid.Row="1" />
                </Grid>
            </ControlTemplate>

            <Style x:Key="TitleHeaderControlStyle" TargetType="{x:Type HeaderedContentControl}">
                <Setter Property="BorderThickness" Value="0,0,0,1" />
                <Setter Property="BorderBrush" Value="LightGray" />
                <Setter Property="Template" Value="{StaticResource TitleHeaderControlTemplate}" />
            </Style>

            <Style x:Key="BigHorizonHeaderControlStyle" TargetType="{x:Type HeaderedContentControl}">
                <Setter Property="TabIndex" Value="0" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="90" Width="Auto"/>
                                    <ColumnDefinition MinWidth="100"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{TemplateBinding Header}" VerticalAlignment="Center"/>
                                <ContentPresenter Grid.Column="1" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="NormHorizonHeaderControlStyle" TargetType="{x:Type HeaderedContentControl}">
                <Setter Property="TabIndex" Value="0" />
                <Setter Property="Padding" Value="7,0" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                            <Grid Background="{TemplateBinding Background}" Margin="{TemplateBinding Margin}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{TemplateBinding Header}" VerticalAlignment="Center" Padding="{TemplateBinding Padding}"/>
                                <ContentPresenter Grid.Column="1" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--#endregion-->

            <!--#endregion-->

        </ResourceDictionary>
    </Application.Resources>
    <JumpList.JumpList>
        <JumpList>
            <JumpTask Title="Say hello" Arguments="Hello" CustomCategory="Test"></JumpTask>
            <JumpTask Title="Get calculator" ApplicationPath="calc" CustomCategory="Invoke"></JumpTask>
        </JumpList>
    </JumpList.JumpList>
</Application>
