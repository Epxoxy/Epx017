<Page x:Class="Example.CubicBezier"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:xoxy="http://Epxoxy.org/controls"
      xmlns:sys="clr-namespace:System;assembly=mscorlib"
      xmlns:local="clr-namespace:Example"
      Title="CubicBezier"
      mc:Ignorable="d" 
      d:DesignHeight="600" d:DesignWidth="800">
    <Page.Resources>
        <local:AdditionConverter x:Key="add" />
        <sys:Double x:Key="10">10</sys:Double>
        <SolidColorBrush x:Key="p1Color" Color="#FF6078" />
        <SolidColorBrush x:Key="p2Color" Color="#00AABB" />
    </Page.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <TextBlock Text="CUBIC BEZIER TEST SOLUTION" FontSize="25" Foreground="DimGray" HorizontalAlignment="Center" TextAlignment="Center" Padding="10"/>
        <Grid x:Name="grid" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="385"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition MinHeight="375"/>
            </Grid.RowDefinitions>
            <TextBlock FontSize="16" Padding="12,7">
            <Run Text="Cubic-bezier(" />
            <Run x:Name="p1Run" Foreground="{StaticResource p1Color}" Text="0,0"/>
            <Run Text="," />
            <Run x:Name="p2Run" Foreground="{StaticResource p2Color}" Text="0,0"/>
            <Run Text=")" />
            </TextBlock>
            <Grid Grid.Row="1" HorizontalAlignment="Left">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid>
                    <Grid RenderTransformOrigin=".5,.5" Height="320" Width="320" Margin="12,7">
                        <Grid.RenderTransform>
                            <ScaleTransform ScaleY="-1" />
                        </Grid.RenderTransform>
                        <Line Stroke="LightGray" HorizontalAlignment="Left" VerticalAlignment="Top" StrokeThickness="5"
                          X1="10" Y1="10" X2="310" Y2="310"/>
                        <Canvas Height="300" Width="300"  ClipToBounds="False">
                            <Path Stretch="None" StrokeThickness="5" Stroke="SkyBlue" ClipToBounds="False">
                                <Path.Data>
                                    <PathGeometry>
                                        <PathGeometry.Figures>
                                            <PathFigureCollection>
                                                <PathFigure StartPoint="0,0" IsClosed="False" IsFilled="True">
                                                    <BezierSegment x:Name="bezier" IsSmoothJoin="True" IsStroked="True">
                                                        <BezierSegment.Point1>
                                                            <Point X="0" Y="0" />
                                                        </BezierSegment.Point1>
                                                        <BezierSegment.Point2>
                                                            <Point X="0" Y="0" />
                                                        </BezierSegment.Point2>
                                                        <BezierSegment.Point3>
                                                            <Point X="300" Y="300" />
                                                        </BezierSegment.Point3>
                                                    </BezierSegment>
                                                </PathFigure>
                                            </PathFigureCollection>
                                        </PathGeometry.Figures>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>
                        </Canvas>
                        <Canvas x:Name="pLines" x:FieldModifier="private">
                            <Line x:Name="p2Line" X1="310" Y1="310" Stroke="Black" StrokeThickness="1"
                              X2="{Binding RenderTransform.X, ElementName=p2Ellipse, ConverterParameter={StaticResource 10}, Converter={StaticResource add}}"
                              Y2="{Binding RenderTransform.Y, ElementName=p2Ellipse, ConverterParameter={StaticResource 10}, Converter={StaticResource add}}"/>
                            <Line x:Name="p1Line" X1="10" Y1="10" Stroke="Orange" StrokeThickness="1"
                              X2="{Binding RenderTransform.X, ElementName=p1Ellipse, ConverterParameter={StaticResource 10}, Converter={StaticResource add}}"
                              Y2="{Binding RenderTransform.Y, ElementName=p1Ellipse, ConverterParameter={StaticResource 10}, Converter={StaticResource add}}"/>
                        </Canvas>
                        <Border BorderThickness="2,2,0,0" BorderBrush="Gray" Height="300" Width="300" />
                        <Ellipse Height="20" Width="20" Fill="White" Stroke="DimGray" HorizontalAlignment="Left" VerticalAlignment="Top" />
                        <Ellipse Height="20" Width="20" Fill="White" Stroke="DimGray" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <Ellipse.RenderTransform>
                                <TranslateTransform  X="300" Y="300"/>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                        <Ellipse x:Name="p1Ellipse" Height="20" Width="20" Fill="{StaticResource p1Color}" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <Ellipse.RenderTransform>
                                <TranslateTransform X="0" Y="0"/>
                            </Ellipse.RenderTransform>
                            <i:Interaction.Behaviors>
                                <ei:MouseDragElementBehavior x:Name="p1bh" ConstrainToParentBounds="{Binding IsChecked, ElementName=ctpSwitch}" Dragging="onEllipseOneDragging"/>
                            </i:Interaction.Behaviors>
                        </Ellipse>
                        <Ellipse x:Name="p2Ellipse" Height="20" Width="20" Fill="{StaticResource p2Color}"  HorizontalAlignment="Left" VerticalAlignment="Top">
                            <i:Interaction.Behaviors>
                                <ei:MouseDragElementBehavior ConstrainToParentBounds="{Binding IsChecked, ElementName=ctpSwitch}" Dragging="onEllipseTwoDragging"/>
                            </i:Interaction.Behaviors>
                            <Ellipse.RenderTransform>
                                <TranslateTransform  X="300" Y="300"/>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                    </Grid>
                    <TextBlock Text="PROGRESSION" FontSize="15" Foreground="DimGray" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="140" TextAlignment="Center">
                        <TextBlock.RenderTransform>
                            <RotateTransform Angle="-90"/>
                        </TextBlock.RenderTransform>
                    </TextBlock>
                    <TextBlock Text="TIME" VerticalAlignment="Bottom" Margin="42,0" Foreground="DimGray" FontSize="15"/>
                </Grid>
                <ItemsControl  Grid.Row="1">
                    <xoxy:ToggleSwitch x:Name="ctpSwitch" IsChecked="True" Content="ConstrainToParentBounds" VerticalContentAlignment="Center" />
                    <Button Content="Reset" Click="resetBtnClick" Padding="10,7" Style="{StaticResource ForeToBackBtnStyle}"
                            SnapsToDevicePixels="True"/>
                </ItemsControl>
            </Grid>

            <TextBlock Grid.Column="1" Text="Preview&amp;compare" FontSize="20" VerticalAlignment="Center"/>
            <Grid Grid.Column="1" Grid.Row="1">
                <ItemsControl x:Name="preLayer" HorizontalContentAlignment="Left" Padding="0">
                    <TextBlock Margin="0,7" Foreground="DimGray" FontSize="14">
                    <Run Text="Duration" BaselineAlignment="TextTop"/>
                    <Slider Margin="2,3" Width="210" x:Name="slider" Maximum="10" Value="3" Style="{StaticResource MDStyleSlider}"/>
                    <Run Text="{Binding Value, ElementName=slider,StringFormat={}\{0:0.00\}}" BaselineAlignment="TextTop"/>
                    <Run Text="seconds" BaselineAlignment="TextTop"/>
                    </TextBlock>
                    <Button x:Name="goBtn" Grid.Column="1" HorizontalAlignment="Left" Content="GO" Click="goBtnClick" Padding="20,7" Margin="0,7" BorderThickness="0"/>
                    <Rectangle x:Name="rect1" Margin="0,7" Height="36" Width="36" RadiusX="2" RadiusY="2" Fill="{StaticResource p1Color}" HorizontalAlignment="Left">
                        <Rectangle.RenderTransform>
                            <TranslateTransform X="0" />
                        </Rectangle.RenderTransform>
                    </Rectangle>
                    <Rectangle x:Name="rect2" Margin="0,7" Height="36" Width="36" RadiusX="2" RadiusY="2" Fill="{StaticResource p2Color}" HorizontalAlignment="Left">
                        <Rectangle.RenderTransform>
                            <TranslateTransform X="0" />
                        </Rectangle.RenderTransform>
                    </Rectangle>
                    <ItemsControl Margin="0,12" HorizontalAlignment="Left">
                        <ComboBox x:Name="modeCombobox" SelectedIndex="0" MinWidth="120" Style="{StaticResource ComboBoxStyle}">
                            <EasingMode>EaseIn</EasingMode>
                            <EasingMode>EaseOut</EasingMode>
                            <EasingMode>EaseInOut</EasingMode>
                        </ComboBox>
                        <ComboBox x:Name="EaseCombobox" Margin="0,7" SelectedIndex="0" Style="{StaticResource ComboBoxStyle}">
                            <BackEase/>
                            <BounceEase/>
                            <CircleEase/>
                            <CubicEase/>
                            <ElasticEase/>
                            <ExponentialEase/>
                            <PowerEase/>
                            <QuadraticEase/>
                            <QuarticEase/>
                            <QuinticEase/>
                            <SineEase />
                        </ComboBox>
                    </ItemsControl>
                </ItemsControl>
            </Grid>
        </Grid>
    </Grid>
</Page>

<!--<local:NamedItem Named="BackEase">
    <local:NamedItem.Value>
        <BackEase/>
    </local:NamedItem.Value>
</local:NamedItem>
<local:NamedItem Named="BounceEase">
    <local:NamedItem.Value>
        <BounceEase />
    </local:NamedItem.Value>
</local:NamedItem>
<local:NamedItem Named="CircleEase">
    <local:NamedItem.Value>
        <CircleEase/>
    </local:NamedItem.Value>
</local:NamedItem>
<local:NamedItem Named="CubicEase">
    <local:NamedItem.Value>
        <CubicEase/>
    </local:NamedItem.Value>
</local:NamedItem>
<local:NamedItem Named="ElasticEase">
    <local:NamedItem.Value>
        <ElasticEase/>
    </local:NamedItem.Value>
</local:NamedItem>
<local:NamedItem Named="ExponentialEase">
    <local:NamedItem.Value>
        <ExponentialEase/>
    </local:NamedItem.Value>
</local:NamedItem>
<local:NamedItem Named="PowerEase">
    <local:NamedItem.Value>
        <PowerEase/>
    </local:NamedItem.Value>
</local:NamedItem>
<local:NamedItem Named="QuadraticEase">
    <local:NamedItem.Value>
        <QuadraticEase/>
    </local:NamedItem.Value>
</local:NamedItem>
<local:NamedItem Named="QuarticEase">
    <local:NamedItem.Value>
        <QuarticEase/>
    </local:NamedItem.Value>
</local:NamedItem>
<local:NamedItem Named="QuinticEase">
    <local:NamedItem.Value>
        <QuinticEase/>
    </local:NamedItem.Value>
</local:NamedItem>
<local:NamedItem Named="SineEase">
    <local:NamedItem.Value>
        <SineEase/>
    </local:NamedItem.Value>
</local:NamedItem>-->